# -*- coding: utf-8 -*-
"""Aerofit CaseStudy

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zOxpt9wLBOhcDYGdUTdEJ8Sc1msVybkP
"""

# Import the libraries that will be used
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

!gdown 16a8HTBiD48ecCj9vXfmPI94-6cA_SVMz

df=pd.read_csv('aerofit_treadmill.txt')

#explore the data

df.head()

df.info()

df.shape

df.describe(include='object').T

df.describe(include='number').T

#Product Portfolio
#The KP281 is an entry-level treadmill that sells for $1,500.
#The KP481 is for mid-level runners that sell for $1,750.
#The KP781 treadmill is having advanced features that sell for $2,500.

#we have no Null values
df.isnull().sum()

# Non Graphical Analysis

df['Gender'].value_counts()

df['Product'].value_counts()

# Percentage Distribution of Products
df['Product'].value_counts(normalize=True)*100.0

df['MaritalStatus'].value_counts()

#Graphical Analysis

df.head()

sns.histplot(df['Age'],bins=5)

# We have only few Customer below age 20
df.loc[df['Age']<20]

# We will create buckets based on Age

df['AgeBucket']=pd.cut(df['Age'],bins=[15,25,35,45,55],labels=['Young Adults','Old Adults','Middle Age','Old'])

df['AgeBucket'].value_counts()

sns.countplot(data=df,x='AgeBucket')

#Observation:
#We have most customers in the age range of 18-35

df.head()

sns.histplot(df['Education'],bins=6)

df['Education'].value_counts()

df['EducationLevel']=pd.cut(df['Education'],bins=[10,14,17,22],labels=['Basic','Intermediate','Advance'])

sns.countplot(data=df,x='EducationLevel',label=True)

#Observation:
#We have most customers in the Basic to Intermediate Education level

df['Usage'].value_counts()

df['UsageLevel']=pd.cut(df['Usage'],bins=[1,3,5,7],labels=['Low','Moderate','High'])

df.loc[df['UsageLevel']=='High']

df['UsageLevel'].value_counts()

sns.countplot(data=df,x='UsageLevel')

#Observation: Most Customers purchase treadmile for a Low-Moderate Usage

df.head(5)

df['Fitness'].value_counts()

df['FitnessLevel']=pd.cut(df['Fitness'],bins=[0,2,4,5],labels=['Begineer','Advance','Elite'])

df['FitnessLevel'].value_counts()

sns.countplot(data=df,x='FitnessLevel')

df['IncomeLevel']=pd.cut(df['Income'],bins=[25000,45000,60000,80000,150000],labels=['Low','Moderate','High','Very High'])

#Income-Level Distribution of Customers
sns.countplot(data=df,x='IncomeLevel')

#Observation: Most Customers are Advance level of fitness, we have equal distribution of Begineer and Elite customers aswell

# We will check for outliers using Box Plot

plt.figure(figsize=(12,10))
plt.subplot(3,2,1)
plt.suptitle('Outlier Detection')
sns.boxplot(data=df,x='Age')
plt.subplot(3,2,2)
sns.boxplot(data=df,x='Education')
plt.subplot(3,2,3)
sns.boxplot(data=df,x='Usage')
plt.subplot(3,2,4)
sns.boxplot(data=df,x='Fitness')
plt.subplot(3,2,5)
sns.boxplot(data=df,x='Income')
plt.subplot(3,2,6)
sns.boxplot(data=df,x='Miles')

#Observation: We see a lot of outliers in Income and Miles

df.head()

#Product vs Fitness Level
#Product vs Age
#Product vs Usage
#Product vs Education Level
#Product vs Income
#Product vs Marital Status

plt.figure(figsize=(12,10))
plt.subplot(3,2,1)
sns.countplot(data=df,x='Product',hue='FitnessLevel')
plt.subplot(3,2,2)
sns.countplot(data=df,x='Product',hue='AgeBucket')
plt.subplot(3,2,3)
sns.countplot(data=df,x='Product',hue='UsageLevel')
plt.subplot(3,2,4)
sns.countplot(data=df,x='Product',hue='EducationLevel')
plt.subplot(3,2,5)
sns.countplot(data=df,x='Product',hue='IncomeLevel')
plt.subplot(3,2,6)
sns.countplot(data=df,x='Product',hue='MaritalStatus')

#Observations:
#1.Only the Elite level and handfull of Advanced customers prefer the expensive Treadmile(KP781), else other customers prefer the lesser expensive Models(KP281, KP481)
#2.We see a similar distribution for all three products with respect to age group
#3.Only the customers with High-Moderate usage expectations prefer the expensive Treadmile(KP781), else other customers prefer the lesser expensive Models(KP281, KP481)
#4.Only Customers with Advance level of education prefer the expensive Treadmile(KP781), we see similar distribution for KP281 & KP481
#5.Customers with very high Income only purchase the KP781, we see similar distribution for KP281 & KP481
#6.We see a similar distribution for all three products with respect to Marital Status

df.head()

sns.pairplot(df)

df.head(5)

#We will create Contingency Tables to compute Marginal and Conditional Probability

pd.crosstab(df['Gender'],df['Product'],margins='All')

pd.crosstab(df['Gender'],df['Product'],normalize=True,margins=True)

pd.crosstab(df['Gender'],df['Product'],normalize='index',margins=True)

pd.crosstab([df['Gender'],df['MaritalStatus']],df['Product'],margins=True,normalize='index')

pd.crosstab([df['AgeBucket'],df['FitnessLevel']],df['Product'],margins=True,normalize='index')

pd.crosstab([df['IncomeLevel'],df['FitnessLevel']],df['Product'],margins=True,normalize='index')

pd.crosstab([df['IncomeLevel'],df['UsageLevel']],df['Product'],margins=True,normalize='index')

pd.crosstab([df['FitnessLevel'],df['UsageLevel']],df['Product'],margins=True,normalize='index')

"""Observations:
1.We can see from the crosstabs Probability of which treadmile the customer buys is highly dependent on the following factors- Income, Fitness Level and Usage Level
2.We cannot infer much insight from probability distribution of Gender, Marital Status and Age"""